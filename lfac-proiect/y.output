Terminals unused in grammar

    STRING
    EVAL
    TypeOf
    DO
    ELSE
    SIR_CAR
    '['
    ']'
    '!'


Rules useless in parser due to conflicts

   87 $@7: %empty


State 120 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: var_globale blocFunctii blocMain

    2 blocMain: MAIN '{' cod RETURN ';' '}'
    3         | MAIN ';'

    4 cod: variabila ';'
    5    | if_then_else
    6    | variabila ';' cod
    7    | if_then_else cod
    8    | str_control
    9    | str_control cod

   10 str_control: structtype '(' cond_bool ')' '{' stm_body '}' ';'

   11 structtype: IF
   12           | WHILE
   13           | FOR

   14 blocFunctii: FUNCTIONS '{' declarari_func '}'
   15            | FUNCTIONS ';'

   16 declarari_func: FUNCTION functie ';'
   17               | FUNCTION functie ';' declarari_func

   18 $@1: %empty

   19 functie: datatype_f ID $@1 '(' parametri ')'

   20 parametri: declarare_par
   21          | declarare_par ',' parametri
   22          | %empty

   23 declarare_par: datatype ID

   24 $@2: %empty

   25 declarare_par: datatype ID '=' $@2 value

   26 var_globale: GLOBAL '{' declarari_var_glob '}'
   27            | GLOBAL ';'

   28 declarari_var_glob: variabila_glob ';'
   29                   | variabila_glob ';' declarari_var_glob

   30 variabila_glob: datatype ID

   31 $@3: %empty

   32 variabila_glob: datatype ID $@3 DIM

   33 $@4: %empty

   34 variabila_glob: datatype ID $@4 ATR value

   35 datatype_f: INT
   36           | VOID
   37           | FLOAT
   38           | CHAR

   39 variabila: datatype ID

   40 $@5: %empty

   41 variabila: datatype ID $@5 DIM

   42 $@6: %empty

   43 variabila: datatype ID $@6 ATR value

   44 datatype: INT
   45         | FLOAT
   46         | CHAR

   47 value: NUMAR
   48      | NUMAR_REAL
   49      | CARACTER

   50 if_then_else: IF_ELSE '(' cond_bool ')' '{' stm_body '}' ';'

   51 cond_bool: ID op_binar ID
   52          | ID op_binar value
   53          | value op_binar ID
   54          | value op_binar value
   55          | ID op_binar expr_artm
   56          | NOT cond_bool

   57 op_binar: AND
   58         | OR
   59         | EGALITATE
   60         | LT
   61         | GT
   62         | ATR
   63         | LE
   64         | DIFERIT
   65         | GE

   66 expr_artm: ID op_artm ID
   67          | ID op_artm value
   68          | value op_artm ID
   69          | value op_artm value
   70          | ID op_artm_unare

   71 op_artm_unare: INCREMENTARE
   72              | DECREMENTARE

   73 op_artm: ADUNARE
   74        | SCADERE
   75        | INMULTIRE
   76        | DIV
   77        | MODULO
   78        | ADUNARE_ATR
   79        | SCADERE_ATR
   80        | INMULTIRE_ATR
   81        | DIV_ATR
   82        | MOD_ATR

   83 stm_body: PRINT ';'
   84         | PRINT ';' stm_body
   85         | atribuire
   86         | atribuire stm_body

   87 $@7: %empty

   88 atribuire: ID $@7 ATR expr_artm ';'
   89          | expr_artm ';'
   90          | ID ATR value ';'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33)
    '(' (40) 10 19 50
    ')' (41) 10 19 50
    ',' (44) 21
    ';' (59) 2 3 4 6 10 15 16 17 27 28 29 50 83 84 88 89 90
    '=' (61) 25
    '[' (91)
    ']' (93)
    '{' (123) 2 10 14 26 50
    '}' (125) 2 10 14 26 50
    error (256)
    PRINT (258) 83 84
    ATR (259) 34 43 62 88 90
    GLOBAL (260) 26 27
    FUNCTIONS (261) 14 15
    MAIN (262) 2 3
    INT (263) 35 44
    FLOAT (264) 37 45
    CHAR (265) 38 46
    STRING (266)
    EVAL (267)
    TypeOf (268)
    RETURN (269) 2
    FOR (270) 13
    WHILE (271) 12
    DO (272)
    IF_ELSE (273) 50
    VOID (274) 36
    FUNCTION (275) 16 17
    IF (276) 11
    ELSE (277)
    NUMAR <intval> (278) 47
    DIM <intval> (279) 32 41
    NUMAR_REAL <realval> (280) 48
    ID <strval> (281) 19 23 25 30 32 34 39 41 43 51 52 53 55 66 67 68 70 88 90
    SIR_CAR <strval> (282)
    CARACTER <charval> (283) 49
    ADUNARE_ATR (284) 78
    SCADERE_ATR (285) 79
    INMULTIRE_ATR (286) 80
    DIV_ATR (287) 81
    MOD_ATR (288) 82
    DIFERIT (289) 64
    AND (290) 57
    OR (291) 58
    NOT (292) 56
    EGALITATE (293) 59
    GT (294) 61
    GE (295) 65
    LT (296) 60
    LE (297) 63
    ADUNARE (298) 73
    SCADERE (299) 74
    INMULTIRE (300) 75
    DIV (301) 76
    MODULO (302) 77
    INCREMENTARE (303) 71
    DECREMENTARE (304) 72


Nonterminals, with rules where they appear

    $accept (60)
        on left: 0
    start (61)
        on left: 1
        on right: 0
    blocMain (62)
        on left: 2 3
        on right: 1
    cod (63)
        on left: 4 5 6 7 8 9
        on right: 2 6 7 9
    str_control (64)
        on left: 10
        on right: 8 9
    structtype (65)
        on left: 11 12 13
        on right: 10
    blocFunctii (66)
        on left: 14 15
        on right: 1
    declarari_func (67)
        on left: 16 17
        on right: 14 17
    functie (68)
        on left: 19
        on right: 16 17
    $@1 (69)
        on left: 18
        on right: 19
    parametri (70)
        on left: 20 21 22
        on right: 19 21
    declarare_par (71)
        on left: 23 25
        on right: 20 21
    $@2 (72)
        on left: 24
        on right: 25
    var_globale (73)
        on left: 26 27
        on right: 1
    declarari_var_glob (74)
        on left: 28 29
        on right: 26 29
    variabila_glob (75)
        on left: 30 32 34
        on right: 28 29
    $@3 (76)
        on left: 31
        on right: 32
    $@4 (77)
        on left: 33
        on right: 34
    datatype_f (78)
        on left: 35 36 37 38
        on right: 19
    variabila (79)
        on left: 39 41 43
        on right: 4 6
    $@5 (80)
        on left: 40
        on right: 41
    $@6 (81)
        on left: 42
        on right: 43
    datatype (82)
        on left: 44 45 46
        on right: 23 25 30 32 34 39 41 43
    value (83)
        on left: 47 48 49
        on right: 25 34 43 52 53 54 67 68 69 90
    if_then_else (84)
        on left: 50
        on right: 5 7
    cond_bool (85)
        on left: 51 52 53 54 55 56
        on right: 10 50 56
    op_binar (86)
        on left: 57 58 59 60 61 62 63 64 65
        on right: 51 52 53 54 55
    expr_artm (87)
        on left: 66 67 68 69 70
        on right: 55 88 89
    op_artm_unare (88)
        on left: 71 72
        on right: 70
    op_artm (89)
        on left: 73 74 75 76 77 78 79 80 81 82
        on right: 66 67 68 69
    stm_body (90)
        on left: 83 84 85 86
        on right: 10 50 84 86
    atribuire (91)
        on left: 88 89 90
        on right: 85 86
    $@7 (92)
        on left: 87
        on right: 88


State 0

    0 $accept: . start $end

    GLOBAL  shift, and go to state 1

    start        go to state 2
    var_globale  go to state 3


State 1

   26 var_globale: GLOBAL . '{' declarari_var_glob '}'
   27            | GLOBAL . ';'

    ';'  shift, and go to state 4
    '{'  shift, and go to state 5


State 2

    0 $accept: start . $end

    $end  shift, and go to state 6


State 3

    1 start: var_globale . blocFunctii blocMain

    FUNCTIONS  shift, and go to state 7

    blocFunctii  go to state 8


State 4

   27 var_globale: GLOBAL ';' .

    $default  reduce using rule 27 (var_globale)


State 5

   26 var_globale: GLOBAL '{' . declarari_var_glob '}'

    INT    shift, and go to state 9
    FLOAT  shift, and go to state 10
    CHAR   shift, and go to state 11

    declarari_var_glob  go to state 12
    variabila_glob      go to state 13
    datatype            go to state 14


State 6

    0 $accept: start $end .

    $default  accept


State 7

   14 blocFunctii: FUNCTIONS . '{' declarari_func '}'
   15            | FUNCTIONS . ';'

    ';'  shift, and go to state 15
    '{'  shift, and go to state 16


State 8

    1 start: var_globale blocFunctii . blocMain

    MAIN  shift, and go to state 17

    blocMain  go to state 18


State 9

   44 datatype: INT .

    $default  reduce using rule 44 (datatype)


State 10

   45 datatype: FLOAT .

    $default  reduce using rule 45 (datatype)


State 11

   46 datatype: CHAR .

    $default  reduce using rule 46 (datatype)


State 12

   26 var_globale: GLOBAL '{' declarari_var_glob . '}'

    '}'  shift, and go to state 19


State 13

   28 declarari_var_glob: variabila_glob . ';'
   29                   | variabila_glob . ';' declarari_var_glob

    ';'  shift, and go to state 20


State 14

   30 variabila_glob: datatype . ID
   32               | datatype . ID $@3 DIM
   34               | datatype . ID $@4 ATR value

    ID  shift, and go to state 21


State 15

   15 blocFunctii: FUNCTIONS ';' .

    $default  reduce using rule 15 (blocFunctii)


State 16

   14 blocFunctii: FUNCTIONS '{' . declarari_func '}'

    FUNCTION  shift, and go to state 22

    declarari_func  go to state 23


State 17

    2 blocMain: MAIN . '{' cod RETURN ';' '}'
    3         | MAIN . ';'

    ';'  shift, and go to state 24
    '{'  shift, and go to state 25


State 18

    1 start: var_globale blocFunctii blocMain .

    $default  reduce using rule 1 (start)


State 19

   26 var_globale: GLOBAL '{' declarari_var_glob '}' .

    $default  reduce using rule 26 (var_globale)


State 20

   28 declarari_var_glob: variabila_glob ';' .
   29                   | variabila_glob ';' . declarari_var_glob

    INT    shift, and go to state 9
    FLOAT  shift, and go to state 10
    CHAR   shift, and go to state 11

    $default  reduce using rule 28 (declarari_var_glob)

    declarari_var_glob  go to state 26
    variabila_glob      go to state 13
    datatype            go to state 14


State 21

   30 variabila_glob: datatype ID .
   32               | datatype ID . $@3 DIM
   34               | datatype ID . $@4 ATR value

    ATR       reduce using rule 33 ($@4)
    DIM       reduce using rule 31 ($@3)
    $default  reduce using rule 30 (variabila_glob)

    $@3  go to state 27
    $@4  go to state 28


State 22

   16 declarari_func: FUNCTION . functie ';'
   17               | FUNCTION . functie ';' declarari_func

    INT    shift, and go to state 29
    FLOAT  shift, and go to state 30
    CHAR   shift, and go to state 31
    VOID   shift, and go to state 32

    functie     go to state 33
    datatype_f  go to state 34


State 23

   14 blocFunctii: FUNCTIONS '{' declarari_func . '}'

    '}'  shift, and go to state 35


State 24

    3 blocMain: MAIN ';' .

    $default  reduce using rule 3 (blocMain)


State 25

    2 blocMain: MAIN '{' . cod RETURN ';' '}'

    INT      shift, and go to state 9
    FLOAT    shift, and go to state 10
    CHAR     shift, and go to state 11
    FOR      shift, and go to state 36
    WHILE    shift, and go to state 37
    IF_ELSE  shift, and go to state 38
    IF       shift, and go to state 39

    cod           go to state 40
    str_control   go to state 41
    structtype    go to state 42
    variabila     go to state 43
    datatype      go to state 44
    if_then_else  go to state 45


State 26

   29 declarari_var_glob: variabila_glob ';' declarari_var_glob .

    $default  reduce using rule 29 (declarari_var_glob)


State 27

   32 variabila_glob: datatype ID $@3 . DIM

    DIM  shift, and go to state 46


State 28

   34 variabila_glob: datatype ID $@4 . ATR value

    ATR  shift, and go to state 47


State 29

   35 datatype_f: INT .

    $default  reduce using rule 35 (datatype_f)


State 30

   37 datatype_f: FLOAT .

    $default  reduce using rule 37 (datatype_f)


State 31

   38 datatype_f: CHAR .

    $default  reduce using rule 38 (datatype_f)


State 32

   36 datatype_f: VOID .

    $default  reduce using rule 36 (datatype_f)


State 33

   16 declarari_func: FUNCTION functie . ';'
   17               | FUNCTION functie . ';' declarari_func

    ';'  shift, and go to state 48


State 34

   19 functie: datatype_f . ID $@1 '(' parametri ')'

    ID  shift, and go to state 49


State 35

   14 blocFunctii: FUNCTIONS '{' declarari_func '}' .

    $default  reduce using rule 14 (blocFunctii)


State 36

   13 structtype: FOR .

    $default  reduce using rule 13 (structtype)


State 37

   12 structtype: WHILE .

    $default  reduce using rule 12 (structtype)


State 38

   50 if_then_else: IF_ELSE . '(' cond_bool ')' '{' stm_body '}' ';'

    '('  shift, and go to state 50


State 39

   11 structtype: IF .

    $default  reduce using rule 11 (structtype)


State 40

    2 blocMain: MAIN '{' cod . RETURN ';' '}'

    RETURN  shift, and go to state 51


State 41

    8 cod: str_control .
    9    | str_control . cod

    INT      shift, and go to state 9
    FLOAT    shift, and go to state 10
    CHAR     shift, and go to state 11
    FOR      shift, and go to state 36
    WHILE    shift, and go to state 37
    IF_ELSE  shift, and go to state 38
    IF       shift, and go to state 39

    $default  reduce using rule 8 (cod)

    cod           go to state 52
    str_control   go to state 41
    structtype    go to state 42
    variabila     go to state 43
    datatype      go to state 44
    if_then_else  go to state 45


State 42

   10 str_control: structtype . '(' cond_bool ')' '{' stm_body '}' ';'

    '('  shift, and go to state 53


State 43

    4 cod: variabila . ';'
    6    | variabila . ';' cod

    ';'  shift, and go to state 54


State 44

   39 variabila: datatype . ID
   41          | datatype . ID $@5 DIM
   43          | datatype . ID $@6 ATR value

    ID  shift, and go to state 55


State 45

    5 cod: if_then_else .
    7    | if_then_else . cod

    INT      shift, and go to state 9
    FLOAT    shift, and go to state 10
    CHAR     shift, and go to state 11
    FOR      shift, and go to state 36
    WHILE    shift, and go to state 37
    IF_ELSE  shift, and go to state 38
    IF       shift, and go to state 39

    $default  reduce using rule 5 (cod)

    cod           go to state 56
    str_control   go to state 41
    structtype    go to state 42
    variabila     go to state 43
    datatype      go to state 44
    if_then_else  go to state 45


State 46

   32 variabila_glob: datatype ID $@3 DIM .

    $default  reduce using rule 32 (variabila_glob)


State 47

   34 variabila_glob: datatype ID $@4 ATR . value

    NUMAR       shift, and go to state 57
    NUMAR_REAL  shift, and go to state 58
    CARACTER    shift, and go to state 59

    value  go to state 60


State 48

   16 declarari_func: FUNCTION functie ';' .
   17               | FUNCTION functie ';' . declarari_func

    FUNCTION  shift, and go to state 22

    $default  reduce using rule 16 (declarari_func)

    declarari_func  go to state 61


State 49

   19 functie: datatype_f ID . $@1 '(' parametri ')'

    $default  reduce using rule 18 ($@1)

    $@1  go to state 62


State 50

   50 if_then_else: IF_ELSE '(' . cond_bool ')' '{' stm_body '}' ';'

    NUMAR       shift, and go to state 57
    NUMAR_REAL  shift, and go to state 58
    ID          shift, and go to state 63
    CARACTER    shift, and go to state 59
    NOT         shift, and go to state 64

    value      go to state 65
    cond_bool  go to state 66


State 51

    2 blocMain: MAIN '{' cod RETURN . ';' '}'

    ';'  shift, and go to state 67


State 52

    9 cod: str_control cod .

    $default  reduce using rule 9 (cod)


State 53

   10 str_control: structtype '(' . cond_bool ')' '{' stm_body '}' ';'

    NUMAR       shift, and go to state 57
    NUMAR_REAL  shift, and go to state 58
    ID          shift, and go to state 63
    CARACTER    shift, and go to state 59
    NOT         shift, and go to state 64

    value      go to state 65
    cond_bool  go to state 68


State 54

    4 cod: variabila ';' .
    6    | variabila ';' . cod

    INT      shift, and go to state 9
    FLOAT    shift, and go to state 10
    CHAR     shift, and go to state 11
    FOR      shift, and go to state 36
    WHILE    shift, and go to state 37
    IF_ELSE  shift, and go to state 38
    IF       shift, and go to state 39

    $default  reduce using rule 4 (cod)

    cod           go to state 69
    str_control   go to state 41
    structtype    go to state 42
    variabila     go to state 43
    datatype      go to state 44
    if_then_else  go to state 45


State 55

   39 variabila: datatype ID .
   41          | datatype ID . $@5 DIM
   43          | datatype ID . $@6 ATR value

    ATR       reduce using rule 42 ($@6)
    DIM       reduce using rule 40 ($@5)
    $default  reduce using rule 39 (variabila)

    $@5  go to state 70
    $@6  go to state 71


State 56

    7 cod: if_then_else cod .

    $default  reduce using rule 7 (cod)


State 57

   47 value: NUMAR .

    $default  reduce using rule 47 (value)


State 58

   48 value: NUMAR_REAL .

    $default  reduce using rule 48 (value)


State 59

   49 value: CARACTER .

    $default  reduce using rule 49 (value)


State 60

   34 variabila_glob: datatype ID $@4 ATR value .

    $default  reduce using rule 34 (variabila_glob)


State 61

   17 declarari_func: FUNCTION functie ';' declarari_func .

    $default  reduce using rule 17 (declarari_func)


State 62

   19 functie: datatype_f ID $@1 . '(' parametri ')'

    '('  shift, and go to state 72


State 63

   51 cond_bool: ID . op_binar ID
   52          | ID . op_binar value
   55          | ID . op_binar expr_artm

    ATR        shift, and go to state 73
    DIFERIT    shift, and go to state 74
    AND        shift, and go to state 75
    OR         shift, and go to state 76
    EGALITATE  shift, and go to state 77
    GT         shift, and go to state 78
    GE         shift, and go to state 79
    LT         shift, and go to state 80
    LE         shift, and go to state 81

    op_binar  go to state 82


State 64

   56 cond_bool: NOT . cond_bool

    NUMAR       shift, and go to state 57
    NUMAR_REAL  shift, and go to state 58
    ID          shift, and go to state 63
    CARACTER    shift, and go to state 59
    NOT         shift, and go to state 64

    value      go to state 65
    cond_bool  go to state 83


State 65

   53 cond_bool: value . op_binar ID
   54          | value . op_binar value

    ATR        shift, and go to state 73
    DIFERIT    shift, and go to state 74
    AND        shift, and go to state 75
    OR         shift, and go to state 76
    EGALITATE  shift, and go to state 77
    GT         shift, and go to state 78
    GE         shift, and go to state 79
    LT         shift, and go to state 80
    LE         shift, and go to state 81

    op_binar  go to state 84


State 66

   50 if_then_else: IF_ELSE '(' cond_bool . ')' '{' stm_body '}' ';'

    ')'  shift, and go to state 85


State 67

    2 blocMain: MAIN '{' cod RETURN ';' . '}'

    '}'  shift, and go to state 86


State 68

   10 str_control: structtype '(' cond_bool . ')' '{' stm_body '}' ';'

    ')'  shift, and go to state 87


State 69

    6 cod: variabila ';' cod .

    $default  reduce using rule 6 (cod)


State 70

   41 variabila: datatype ID $@5 . DIM

    DIM  shift, and go to state 88


State 71

   43 variabila: datatype ID $@6 . ATR value

    ATR  shift, and go to state 89


State 72

   19 functie: datatype_f ID $@1 '(' . parametri ')'

    INT    shift, and go to state 9
    FLOAT  shift, and go to state 10
    CHAR   shift, and go to state 11

    $default  reduce using rule 22 (parametri)

    parametri      go to state 90
    declarare_par  go to state 91
    datatype       go to state 92


State 73

   62 op_binar: ATR .

    $default  reduce using rule 62 (op_binar)


State 74

   64 op_binar: DIFERIT .

    $default  reduce using rule 64 (op_binar)


State 75

   57 op_binar: AND .

    $default  reduce using rule 57 (op_binar)


State 76

   58 op_binar: OR .

    $default  reduce using rule 58 (op_binar)


State 77

   59 op_binar: EGALITATE .

    $default  reduce using rule 59 (op_binar)


State 78

   61 op_binar: GT .

    $default  reduce using rule 61 (op_binar)


State 79

   65 op_binar: GE .

    $default  reduce using rule 65 (op_binar)


State 80

   60 op_binar: LT .

    $default  reduce using rule 60 (op_binar)


State 81

   63 op_binar: LE .

    $default  reduce using rule 63 (op_binar)


State 82

   51 cond_bool: ID op_binar . ID
   52          | ID op_binar . value
   55          | ID op_binar . expr_artm

    NUMAR       shift, and go to state 57
    NUMAR_REAL  shift, and go to state 58
    ID          shift, and go to state 93
    CARACTER    shift, and go to state 59

    value      go to state 94
    expr_artm  go to state 95


State 83

   56 cond_bool: NOT cond_bool .

    $default  reduce using rule 56 (cond_bool)


State 84

   53 cond_bool: value op_binar . ID
   54          | value op_binar . value

    NUMAR       shift, and go to state 57
    NUMAR_REAL  shift, and go to state 58
    ID          shift, and go to state 96
    CARACTER    shift, and go to state 59

    value  go to state 97


State 85

   50 if_then_else: IF_ELSE '(' cond_bool ')' . '{' stm_body '}' ';'

    '{'  shift, and go to state 98


State 86

    2 blocMain: MAIN '{' cod RETURN ';' '}' .

    $default  reduce using rule 2 (blocMain)


State 87

   10 str_control: structtype '(' cond_bool ')' . '{' stm_body '}' ';'

    '{'  shift, and go to state 99


State 88

   41 variabila: datatype ID $@5 DIM .

    $default  reduce using rule 41 (variabila)


State 89

   43 variabila: datatype ID $@6 ATR . value

    NUMAR       shift, and go to state 57
    NUMAR_REAL  shift, and go to state 58
    CARACTER    shift, and go to state 59

    value  go to state 100


State 90

   19 functie: datatype_f ID $@1 '(' parametri . ')'

    ')'  shift, and go to state 101


State 91

   20 parametri: declarare_par .
   21          | declarare_par . ',' parametri

    ','  shift, and go to state 102

    $default  reduce using rule 20 (parametri)


State 92

   23 declarare_par: datatype . ID
   25              | datatype . ID '=' $@2 value

    ID  shift, and go to state 103


State 93

   51 cond_bool: ID op_binar ID .
   66 expr_artm: ID . op_artm ID
   67          | ID . op_artm value
   70          | ID . op_artm_unare

    ADUNARE_ATR    shift, and go to state 104
    SCADERE_ATR    shift, and go to state 105
    INMULTIRE_ATR  shift, and go to state 106
    DIV_ATR        shift, and go to state 107
    MOD_ATR        shift, and go to state 108
    ADUNARE        shift, and go to state 109
    SCADERE        shift, and go to state 110
    INMULTIRE      shift, and go to state 111
    DIV            shift, and go to state 112
    MODULO         shift, and go to state 113
    INCREMENTARE   shift, and go to state 114
    DECREMENTARE   shift, and go to state 115

    $default  reduce using rule 51 (cond_bool)

    op_artm_unare  go to state 116
    op_artm        go to state 117


State 94

   52 cond_bool: ID op_binar value .
   68 expr_artm: value . op_artm ID
   69          | value . op_artm value

    ADUNARE_ATR    shift, and go to state 104
    SCADERE_ATR    shift, and go to state 105
    INMULTIRE_ATR  shift, and go to state 106
    DIV_ATR        shift, and go to state 107
    MOD_ATR        shift, and go to state 108
    ADUNARE        shift, and go to state 109
    SCADERE        shift, and go to state 110
    INMULTIRE      shift, and go to state 111
    DIV            shift, and go to state 112
    MODULO         shift, and go to state 113

    $default  reduce using rule 52 (cond_bool)

    op_artm  go to state 118


State 95

   55 cond_bool: ID op_binar expr_artm .

    $default  reduce using rule 55 (cond_bool)


State 96

   53 cond_bool: value op_binar ID .

    $default  reduce using rule 53 (cond_bool)


State 97

   54 cond_bool: value op_binar value .

    $default  reduce using rule 54 (cond_bool)


State 98

   50 if_then_else: IF_ELSE '(' cond_bool ')' '{' . stm_body '}' ';'

    PRINT       shift, and go to state 119
    NUMAR       shift, and go to state 57
    NUMAR_REAL  shift, and go to state 58
    ID          shift, and go to state 120
    CARACTER    shift, and go to state 59

    value      go to state 121
    expr_artm  go to state 122
    stm_body   go to state 123
    atribuire  go to state 124


State 99

   10 str_control: structtype '(' cond_bool ')' '{' . stm_body '}' ';'

    PRINT       shift, and go to state 119
    NUMAR       shift, and go to state 57
    NUMAR_REAL  shift, and go to state 58
    ID          shift, and go to state 120
    CARACTER    shift, and go to state 59

    value      go to state 121
    expr_artm  go to state 122
    stm_body   go to state 125
    atribuire  go to state 124


State 100

   43 variabila: datatype ID $@6 ATR value .

    $default  reduce using rule 43 (variabila)


State 101

   19 functie: datatype_f ID $@1 '(' parametri ')' .

    $default  reduce using rule 19 (functie)


State 102

   21 parametri: declarare_par ',' . parametri

    INT    shift, and go to state 9
    FLOAT  shift, and go to state 10
    CHAR   shift, and go to state 11

    $default  reduce using rule 22 (parametri)

    parametri      go to state 126
    declarare_par  go to state 91
    datatype       go to state 92


State 103

   23 declarare_par: datatype ID .
   25              | datatype ID . '=' $@2 value

    '='  shift, and go to state 127

    $default  reduce using rule 23 (declarare_par)


State 104

   78 op_artm: ADUNARE_ATR .

    $default  reduce using rule 78 (op_artm)


State 105

   79 op_artm: SCADERE_ATR .

    $default  reduce using rule 79 (op_artm)


State 106

   80 op_artm: INMULTIRE_ATR .

    $default  reduce using rule 80 (op_artm)


State 107

   81 op_artm: DIV_ATR .

    $default  reduce using rule 81 (op_artm)


State 108

   82 op_artm: MOD_ATR .

    $default  reduce using rule 82 (op_artm)


State 109

   73 op_artm: ADUNARE .

    $default  reduce using rule 73 (op_artm)


State 110

   74 op_artm: SCADERE .

    $default  reduce using rule 74 (op_artm)


State 111

   75 op_artm: INMULTIRE .

    $default  reduce using rule 75 (op_artm)


State 112

   76 op_artm: DIV .

    $default  reduce using rule 76 (op_artm)


State 113

   77 op_artm: MODULO .

    $default  reduce using rule 77 (op_artm)


State 114

   71 op_artm_unare: INCREMENTARE .

    $default  reduce using rule 71 (op_artm_unare)


State 115

   72 op_artm_unare: DECREMENTARE .

    $default  reduce using rule 72 (op_artm_unare)


State 116

   70 expr_artm: ID op_artm_unare .

    $default  reduce using rule 70 (expr_artm)


State 117

   66 expr_artm: ID op_artm . ID
   67          | ID op_artm . value

    NUMAR       shift, and go to state 57
    NUMAR_REAL  shift, and go to state 58
    ID          shift, and go to state 128
    CARACTER    shift, and go to state 59

    value  go to state 129


State 118

   68 expr_artm: value op_artm . ID
   69          | value op_artm . value

    NUMAR       shift, and go to state 57
    NUMAR_REAL  shift, and go to state 58
    ID          shift, and go to state 130
    CARACTER    shift, and go to state 59

    value  go to state 131


State 119

   83 stm_body: PRINT . ';'
   84         | PRINT . ';' stm_body

    ';'  shift, and go to state 132


State 120

   66 expr_artm: ID . op_artm ID
   67          | ID . op_artm value
   70          | ID . op_artm_unare
   88 atribuire: ID . $@7 ATR expr_artm ';'
   90          | ID . ATR value ';'

    ATR            shift, and go to state 133
    ADUNARE_ATR    shift, and go to state 104
    SCADERE_ATR    shift, and go to state 105
    INMULTIRE_ATR  shift, and go to state 106
    DIV_ATR        shift, and go to state 107
    MOD_ATR        shift, and go to state 108
    ADUNARE        shift, and go to state 109
    SCADERE        shift, and go to state 110
    INMULTIRE      shift, and go to state 111
    DIV            shift, and go to state 112
    MODULO         shift, and go to state 113
    INCREMENTARE   shift, and go to state 114
    DECREMENTARE   shift, and go to state 115

    ATR  [reduce using rule 87 ($@7)]

    op_artm_unare  go to state 116
    op_artm        go to state 117
    $@7            go to state 134


State 121

   68 expr_artm: value . op_artm ID
   69          | value . op_artm value

    ADUNARE_ATR    shift, and go to state 104
    SCADERE_ATR    shift, and go to state 105
    INMULTIRE_ATR  shift, and go to state 106
    DIV_ATR        shift, and go to state 107
    MOD_ATR        shift, and go to state 108
    ADUNARE        shift, and go to state 109
    SCADERE        shift, and go to state 110
    INMULTIRE      shift, and go to state 111
    DIV            shift, and go to state 112
    MODULO         shift, and go to state 113

    op_artm  go to state 118


State 122

   89 atribuire: expr_artm . ';'

    ';'  shift, and go to state 135


State 123

   50 if_then_else: IF_ELSE '(' cond_bool ')' '{' stm_body . '}' ';'

    '}'  shift, and go to state 136


State 124

   85 stm_body: atribuire .
   86         | atribuire . stm_body

    PRINT       shift, and go to state 119
    NUMAR       shift, and go to state 57
    NUMAR_REAL  shift, and go to state 58
    ID          shift, and go to state 120
    CARACTER    shift, and go to state 59

    $default  reduce using rule 85 (stm_body)

    value      go to state 121
    expr_artm  go to state 122
    stm_body   go to state 137
    atribuire  go to state 124


State 125

   10 str_control: structtype '(' cond_bool ')' '{' stm_body . '}' ';'

    '}'  shift, and go to state 138


State 126

   21 parametri: declarare_par ',' parametri .

    $default  reduce using rule 21 (parametri)


State 127

   25 declarare_par: datatype ID '=' . $@2 value

    $default  reduce using rule 24 ($@2)

    $@2  go to state 139


State 128

   66 expr_artm: ID op_artm ID .

    $default  reduce using rule 66 (expr_artm)


State 129

   67 expr_artm: ID op_artm value .

    $default  reduce using rule 67 (expr_artm)


State 130

   68 expr_artm: value op_artm ID .

    $default  reduce using rule 68 (expr_artm)


State 131

   69 expr_artm: value op_artm value .

    $default  reduce using rule 69 (expr_artm)


State 132

   83 stm_body: PRINT ';' .
   84         | PRINT ';' . stm_body

    PRINT       shift, and go to state 119
    NUMAR       shift, and go to state 57
    NUMAR_REAL  shift, and go to state 58
    ID          shift, and go to state 120
    CARACTER    shift, and go to state 59

    $default  reduce using rule 83 (stm_body)

    value      go to state 121
    expr_artm  go to state 122
    stm_body   go to state 140
    atribuire  go to state 124


State 133

   90 atribuire: ID ATR . value ';'

    NUMAR       shift, and go to state 57
    NUMAR_REAL  shift, and go to state 58
    CARACTER    shift, and go to state 59

    value  go to state 141


State 134

   88 atribuire: ID $@7 . ATR expr_artm ';'

    ATR  shift, and go to state 142


State 135

   89 atribuire: expr_artm ';' .

    $default  reduce using rule 89 (atribuire)


State 136

   50 if_then_else: IF_ELSE '(' cond_bool ')' '{' stm_body '}' . ';'

    ';'  shift, and go to state 143


State 137

   86 stm_body: atribuire stm_body .

    $default  reduce using rule 86 (stm_body)


State 138

   10 str_control: structtype '(' cond_bool ')' '{' stm_body '}' . ';'

    ';'  shift, and go to state 144


State 139

   25 declarare_par: datatype ID '=' $@2 . value

    NUMAR       shift, and go to state 57
    NUMAR_REAL  shift, and go to state 58
    CARACTER    shift, and go to state 59

    value  go to state 145


State 140

   84 stm_body: PRINT ';' stm_body .

    $default  reduce using rule 84 (stm_body)


State 141

   90 atribuire: ID ATR value . ';'

    ';'  shift, and go to state 146


State 142

   88 atribuire: ID $@7 ATR . expr_artm ';'

    NUMAR       shift, and go to state 57
    NUMAR_REAL  shift, and go to state 58
    ID          shift, and go to state 147
    CARACTER    shift, and go to state 59

    value      go to state 121
    expr_artm  go to state 148


State 143

   50 if_then_else: IF_ELSE '(' cond_bool ')' '{' stm_body '}' ';' .

    $default  reduce using rule 50 (if_then_else)


State 144

   10 str_control: structtype '(' cond_bool ')' '{' stm_body '}' ';' .

    $default  reduce using rule 10 (str_control)


State 145

   25 declarare_par: datatype ID '=' $@2 value .

    $default  reduce using rule 25 (declarare_par)


State 146

   90 atribuire: ID ATR value ';' .

    $default  reduce using rule 90 (atribuire)


State 147

   66 expr_artm: ID . op_artm ID
   67          | ID . op_artm value
   70          | ID . op_artm_unare

    ADUNARE_ATR    shift, and go to state 104
    SCADERE_ATR    shift, and go to state 105
    INMULTIRE_ATR  shift, and go to state 106
    DIV_ATR        shift, and go to state 107
    MOD_ATR        shift, and go to state 108
    ADUNARE        shift, and go to state 109
    SCADERE        shift, and go to state 110
    INMULTIRE      shift, and go to state 111
    DIV            shift, and go to state 112
    MODULO         shift, and go to state 113
    INCREMENTARE   shift, and go to state 114
    DECREMENTARE   shift, and go to state 115

    op_artm_unare  go to state 116
    op_artm        go to state 117


State 148

   88 atribuire: ID $@7 ATR expr_artm . ';'

    ';'  shift, and go to state 149


State 149

   88 atribuire: ID $@7 ATR expr_artm ';' .

    $default  reduce using rule 88 (atribuire)
